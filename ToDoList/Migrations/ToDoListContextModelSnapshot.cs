// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ToDoList.Models;

#nullable disable

namespace ToDoList.Migrations
{
    [DbContext(typeof(ToDoListContext))]
    partial class ToDoListContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ToDoList.Models.ListItems", b =>
                {
                    b.Property<string>("ListItemId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ListId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ListItemName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ListItemId");

                    b.HasIndex("ListId");

                    b.HasIndex("UserId");

                    b.ToTable("Listitems");
                });

            modelBuilder.Entity("ToDoList.Models.ListTitles", b =>
                {
                    b.Property<string>("ListId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ListName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ListId");

                    b.HasIndex("UserId");

                    b.ToTable("ListTitles");
                });

            modelBuilder.Entity("ToDoList.Models.Users", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Contact")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email_Id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ToDoList.Models.ListItems", b =>
                {
                    b.HasOne("ToDoList.Models.ListTitles", "ListTitles")
                        .WithMany("ListItems")
                        .HasForeignKey("ListId");

                    b.HasOne("ToDoList.Models.Users", "Users")
                        .WithMany("ListItems")
                        .HasForeignKey("UserId");

                    b.Navigation("ListTitles");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("ToDoList.Models.ListTitles", b =>
                {
                    b.HasOne("ToDoList.Models.Users", "Users")
                        .WithMany("ListTitles")
                        .HasForeignKey("UserId");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("ToDoList.Models.ListTitles", b =>
                {
                    b.Navigation("ListItems");
                });

            modelBuilder.Entity("ToDoList.Models.Users", b =>
                {
                    b.Navigation("ListItems");

                    b.Navigation("ListTitles");
                });
#pragma warning restore 612, 618
        }
    }
}
